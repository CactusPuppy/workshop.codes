<% cache_unless request.path_parameters.without(:controller, :action, :page, :code, :default, :locale).any?, ["filter", current_locale] do %>
  <div data-toggle-content>
    <nav class="filter" data-filter-locale="<%= current_locale %>">
      <div class="filter__content dropdown__content--left" data-role="content-to-toggle" style="display: none">
        <div class="filter__group">
          <div class="filter__item <%= "filter__item--active" if params[:category] %> dropdown" data-dropdown data-filter data-default="<%= t("filter.categories") %>">
            <% current_category = params[:category].gsub("-", " ").split.map(&:capitalize).join(" ") if params[:category] %>
            <% i18n_category = i18n_value_in_array(categories, current_category) if current_category.present? %>
            <%= link_to current_category.present? ? i18n_category : t("filter.categories"), "#",
                        data: { action: "toggle-dropdown", filter_type: "categories", value: params[:category] } %>
            <%= link_to "X", "#", class: "filter__remove", data: { action: "add-filter", value: "" } %>

            <div class="dropdown__content dropdown__content--left" data-dropdown-content>
              <% categories.each do |category| %>
                <%= link_to category[current_locale], build_filter_path(:category, to_slug(category["en"])), class: "dropdown__item", data: { action: "add-filter", value: to_slug(category["en"]) } %>
              <% end %>
            </div>
          </div>

          <div class="filter__item <%= "filter__item--active" if params[:hero] %> dropdown" data-dropdown data-filter data-default="<%= t("filter.heroes") %>">
            <%= link_to params[:hero] ? params[:hero].gsub("-", " ").split.map(&:capitalize).join(" ") : t("filter.heroes"), "#",
                        data: { action: "toggle-dropdown", filter_type: "heroes", value: params[:hero] } %>
            <%= link_to "X", "#", class: "filter__remove", data: { action: "add-filter", value: "" } %>

            <div class="dropdown__content dropdown__content--left" data-dropdown-content>
              <% heroes.group_by { |item| item["category"] }.each do |hero_category, heroes| %>
                <span class="dropdown__label"><%= hero_category[current_locale] %></span>

                <% heroes.each do |hero| %>
                  <% name = i18n_value_in_array(heroes, hero["en"]) %>
                  <%= link_to name, build_filter_path(:hero, to_slug(hero["en"])), class: "dropdown__item", data: { action: "add-filter", value: to_slug(hero["en"]) } %>
                <% end %>
              <% end %>
            </div>
          </div>

          <div class="filter__item <%= "filter__item--active" if params[:map] %> dropdown" data-dropdown data-filter data-default="<%= t("filter.maps") %>">
            <%= link_to params[:map] ? params[:map].gsub("-", " ").split.map(&:capitalize).join(" ") : t("filter.maps"), "#",
                        data: { action: "toggle-dropdown", filter_type: "maps", value: params[:map] } %>
            <%= link_to "X", "#", class: "filter__remove", data: { action: "add-filter", value: "" } %>

            <div class="dropdown__content dropdown__content--left" data-dropdown-content>
              <% maps.group_by { |item| item["type"] }.each do |map_type, maps| %>
                <span class="dropdown__label"><%= map_type[current_locale]  %></span>

                <% maps.each do |map| %>
                  <% name = i18n_value_in_array(maps, map["en"]) %>
                  <%= link_to name, build_filter_path(:map, to_slug(map["en"])), class: "dropdown__item", data: { action: "add-filter", value: to_slug(map["en"]) } %>
                <% end %>
              <% end %>
            </div>
          </div>

          <div class="filter__item <%= "filter__item--active" if params[:author] %> dropdown" data-dropdown data-filter data-default="<%= t("filter.author") %>">
            <%= link_to params[:author] ? params[:author].split("#")[0] : t("filter.author"), "#",
                        data: { action: "toggle-dropdown get-verified-users", filter_type: "author", value: (CGI.escape(params[:author]) if params[:author].present?) } %>
            <%= link_to "X", "#", class: "filter__remove", data: { action: "add-filter", value: "" } %>

            <div class="dropdown__content dropdown__content--left" data-dropdown-content>
              <span class="dropdown__label"><small><%= t "filter.verified_authors" %></small></span>

              <div data-role="filter-authors">
                <span class="dropdown__item text-base"><div class="spinner spinner--small mb-1/4"></div></span>
              </div>
            </div>
          </div>
        </div>

        <div class="filter__group">
          <div class="filter__item <%= "filter__item--active" if params[:sort] %> dropdown" data-dropdown data-filter data-default="<%= t("filter.sort.label") %>">
            <% if params[:search] && !params[:sort] %>
              <%= link_to "Relevancy", "#",
                          data: { action: "toggle-dropdown", filter_type: "sort", value: "" } %>
            <% else %>
              <%= link_to params[:sort] ? params[:sort].gsub("-", " ").humanize : t("filter.sort.label"), "#",
                          data: { action: "toggle-dropdown", filter_type: "sort", value: params[:sort] } %>
            <% end %>

            <%= link_to "X", "#", class: "filter__remove", data: { action: "add-filter", value: "" } %>

            <div class="dropdown__content dropdown__content--left" data-dropdown-content>
              <%= link_to t("filter.sort.created"), build_filter_path(:sort, "created"), class: "dropdown__item", data: { action: "add-filter", value: "created" } %>
              <%= link_to t("filter.sort.updated"), build_filter_path(:sort, "updated"), class: "dropdown__item", data: { action: "add-filter", value: "updated" } %>
              <%= link_to t("filter.sort.on_fire"), build_filter_path(:sort, "on-fire"), class: "dropdown__item", data: { action: "add-filter", value: "on-fire" } %>
              <%= link_to t("filter.sort.favorites"), build_filter_path(:sort, "favorites"), class: "dropdown__item", data: { action: "add-filter", value: "favorites" } %>
              <%= link_to t("filter.sort.views"), build_filter_path(:sort, "views"), class: "dropdown__item", data: { action: "add-filter", value: "views" } %>
            </div>
          </div>

          <div class="filter__item">
            <%= label_tag :exclude_expired, t("filter.exclude_expired.label"), class: "filter__label cursor-pointer" %>

            <div class="checkbox ml-1/4">
              <%= check_box_tag :exclude_expired, "", params[:expired] == "true", data: { filter_type: "exclude-expired" }, autocomplete: "off" %>
            </div>
          </div>
        </div>

        <div class="filter__group">
          <div class="filter__item block w-100">
            <p class="filter__label mt-0">
              <%= t("filter.num_players.label") %>
            </p>

            <%= tag.div data: {
              role: 'num-player-slider',
              type: "filter",
              min_players: (to_range(CGI.escape(params[:players])).first if params[:players].present?),
              max_players: (to_range(CGI.escape(params[:players])).last if params[:players].present?) } %>
            <%= tag.div class: "hidden", data: { filter_type: "players", value: (CGI.escape(params[:players]) if params[:players].present?) }%>
          </div>
        </div>

        <div class="filter__group flex mt-1/4">
          <%= link_to t("filter.apply"), build_filter_path(nil, nil), class: "button button--ghost mr-1/4", data: { role: "filter-link", prefetch: false } %>

          <% if is_filter_active? %>
            <%= link_to t("filter.remove_all"), params[:search] ? "/search/#{ params[:search] }" : posts_path(1), class: "filter__link text-red text-small" %>
          <% end %>
        </div>
      </div>
    </nav>

    <div class="filter-actions">
      <% if is_filter_active? %>
        <%= button_tag t("filter.active"), name: "Filter is active", class: "filter__link filter__link--active", data: { action: "toggle-content", animation_timing: 150 }, aria: { label: "Filter is active" } %>
      <% end %>

      <%= button_tag inline_svg_tag("icons/icon-filter.svg", height: 21, width: 21), name: "Toggle filter", class: "filter__link",
                     data: {
                       action: "toggle-content",
                       animation_timing: 150
                     },
                     aria: {
                       label: "Toggle filter"
                     } %>
    </div>
  </div>
<% end %>
