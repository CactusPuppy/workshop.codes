<% revision_errors_only = !@post.errors.any? %>
<% errors = @post.errors %>
<% errors = errors.copy!(@revision.errors) if @revision.present? %>

(() => {
  <% if errors.any? %>
    const errorBlock = document.querySelector(".error-block")
    if (errorBlock) errorBlock.remove()
    document.querySelectorAll(".field_with_errors").forEach(element => element.classList.remove("field_with_errors"))
    document.querySelectorAll(".tabs__item--with-errors").forEach(element => element.classList.remove("tabs__item--with-errors"))

    window.scrollTo(0, 0)
    document.querySelector("[data-role~='post-form']").insertAdjacentHTML("afterBegin", "<%= j render "form_errors", errors: @post.errors %>")

    let elements;
    <% errors.each do |error| %>
      elements = document.querySelectorAll("[name*='post[<%= "revision_" if revision_errors_only %><%= error.attribute %>]']")
      elements.forEach(element => {
        const formGroup = element.closest("[class^='form-group']")
        formGroup.classList.add("field_with_errors")

        const tabContent = element.closest("[data-tab]")

        if (!tabContent) return

        const tab = document.querySelector(`[data-action='set-tab'][data-target='${ tabContent.dataset.tab }']`)
        tab.classList.add("tabs__item--with-errors")
      })
    <% end %>
  <% else %>
    alert("Something went wrong when saving, but we aren't sure what. Please try again.")
  <% end %>
})()
